var config={title:"Контент",menu:{items:[{title:"Страницы",url:"extension.page.list",items:[{title:"Список",url:"extension.page.list"},{title:"Добавить",url:"extension.page.create"}]}]}};angular.adminModule("page",["bincms.rest","bincms.admin.page.templates","ui.router","textAngular","mgcrea.ngStrap","angularFileUpload"],config).config(["$stateProvider",function(e){e.state("extension.page",{url:"/page"}).state("extension.page.list",{url:"/list",views:{"content@layout":{templateUrl:"admin/page/list.html",controller:"PageListExtensionController"}}}).state("extension.page.create",{url:"/create",views:{"content@layout":{templateUrl:"admin/page/create.html",controller:"PageCreateExtensionController"}}}).state("extension.page.update",{url:"/update/:id",views:{"content@layout":{templateUrl:"admin/page/update.html",controller:"PageUpdateExtensionController",resolve:{page:["$pageService","$stateParams",function(e,t){return e.get({id:t.id}).$promise}]}}}})}]);var PageCreateExtensionController=BaseController.extend({init:function(e,t,a){this.pageService=t,this.fileUploader=a,this.uploader=null,this._super(e)},getDefaultModel:function(){return{title:"",content:"",slug:"",imageId:null,tags:[]}},onSave:function(e,t){e.validate()&&this.pageService.save(t,this.saveSuccessCallback.bind(this),this.saveErrorCallback.bind(this,e))},saveSuccessCallback:function(){this.resetForm()},saveErrorCallback:function(e,t){e.setErrors(t.data.errors)},resetForm:function(){this.$scope.image=null,this.$scope.pageModel=this.getDefaultModel()},uploadImageSuccessCallback:function(e,t){var a=angular.fromJson(t.responseText);a&&(this.$scope.pageModel.imageId=a.id,this.$scope.image=a)},getTags:function(){return[]},selectTagCallback:function(e,t,a){angular.isDefined(t)&&angular.isObject(t)||-1==this.$scope.pageModel.tags.indexOf(a)&&this.$scope.pageModel.tags.push(a),this.$scope.selected.tag=null,this.$scope.$apply()},onRemoveTagClick:function(e){angular.removeItemWithArray(this.$scope.pageModel.tags,!1,e)},defineListeners:function(){this._super()},defineScope:function(){this._super(),this.$scope.onSave=this.onSave.bind(this),this.$scope.onRemoveTagClick=this.onRemoveTagClick.bind(this),this.$scope.pageModel=this.getDefaultModel(),this.$scope.image=null,this.$scope.selected={tag:null},this.uploader=this.fileUploader.create({scope:this.$scope,url:"/api/upload/image",autoUpload:!0}),this.uploader.bind("complete",this.uploadImageSuccessCallback.bind(this)),this.$scope.$on("$typeahead.select.tag",this.selectTagCallback.bind(this))}});PageCreateExtensionController.$inject=["$scope","$pageService","$fileUploader"],angular.adminModule("page").controller("PageCreateExtensionController",PageCreateExtensionController);var PageListExtensionController=BaseController.extend({init:function(e,t,a){this.pageService=t,this.locationService=a,this.searchData=this.locationService.search(),this._super(e)},onLoadPageClick:function(e){this.loadPage(e)},onPageRemoveSuccessCallback:function(e,t){t.success&&angular.removeItemWithArray(this.$scope.pages,"id",e.id)},onSelectPage:function(e){this.loadPage(e)},loadPage:function(e){this.$scope.currentPage=e;var t={page:e,per_page:10},a=this.pageService.get(t,function(){this.$scope.pages=a.items,this.$scope.pagination=a.pagination,this.locationService.search("page",e)}.bind(this))},onPageRemoveClick:function(e){this.pageService.delete({id:e.id},this.onPageRemoveSuccessCallback.bind(this,e))},defineListeners:function(){this._super()},defineScope:function(){this._super(),this.$scope.onLoadPageClick=this.onLoadPageClick.bind(this),this.$scope.onPageRemoveClick=this.onPageRemoveClick.bind(this),this.$scope.onSelectPage=this.onSelectPage.bind(this);var e=this.searchData.page||null;this.loadPage(e)}});PageListExtensionController.$inject=["$scope","$pageService","$location"],angular.adminModule("page").controller("PageListExtensionController",PageListExtensionController);var PageUpdateExtensionController=BaseController.extend({init:function(e,t,a,i){this.pageService=t,this.fileUploader=i,this.page=a,this._super(e)},onSave:function(e,t){e.validate()&&this.pageService.update({id:this.page.id},t,this.saveSuccessCallback.bind(this),this.saveErrorCallback.bind(this,e))},saveSuccessCallback:function(){},saveErrorCallback:function(e,t){e.setErrors(t.data.errors)},uploadImageSuccessCallback:function(e,t){var a=angular.fromJson(t.responseText);a&&(this.$scope.pageModel.imageId=a.id,this.$scope.image=a)},selectTagCallback:function(e,t,a){angular.isDefined(t)&&angular.isObject(t)||-1==this.$scope.pageModel.tags.indexOf(a)&&this.$scope.pageModel.tags.push(a),this.$scope.selected.tag=null,this.$scope.$apply()},onRemoveTagClick:function(e){angular.removeItemWithArray(this.$scope.pageModel.tags,!1,e)},defineListeners:function(){this._super()},defineScope:function(){this._super(),this.$scope.onSave=this.onSave.bind(this),this.$scope.onRemoveTagClick=this.onRemoveTagClick.bind(this),this.$scope.image=null,this.$scope.selected={tag:null};var e=null;null!==this.page.image&&(e=this.page.image.id,this.$scope.image=this.page.image),this.$scope.pageModel=this.page,this.uploader=this.fileUploader.create({scope:this.$scope,url:"/api/upload/image",autoUpload:!0}),this.uploader.bind("complete",this.uploadImageSuccessCallback.bind(this)),this.$scope.$on("$typeahead.select.tag",this.selectTagCallback.bind(this))}});PageUpdateExtensionController.$inject=["$scope","$pageService","page","$fileUploader"],angular.adminModule("page").controller("PageUpdateExtensionController",PageUpdateExtensionController),angular.adminModule("page").directive("chooserDialogPage",["$pageService","$modal",function(e,t){return{restrict:"AE",scope:{onSelected:"&"},replace:!1,link:function(a,i){a.pages=[];var s=t({scope:a,title:"Страницы",template:"admin/page/modal/chooserDialogPage.html",show:!1});a.onSelectClick=function(e,t){e.stopPropagation(),e.preventDefault(),a.onSelected({url:"/page/"+t.slug}),s.hide()},a.onSelectPage=function(e){a.loadPage(e)},a.loadPage=function(t){e.get({per_page:15,page:t},function(e){a.pages=e.items,a.pagination=e.pagination})},i.bind("click",function(){a.loadPage(1),s.show()})}}}]);